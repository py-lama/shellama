# Example Kubernetes deployment configuration for SheLLama DevOps tools testing

---
apiVersion: v1
kind: Namespace
metadata:
  name: pylama
  labels:
    name: pylama

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shellama-config
  namespace: pylama
data:
  SHELLAMA_PORT: "5000"
  SHELLAMA_HOST: "0.0.0.0"
  SHELLAMA_DEBUG: "false"
  APILAMA_URL: "http://apilama-service:5001"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apilama-config
  namespace: pylama
data:
  APILAMA_PORT: "5001"
  APILAMA_HOST: "0.0.0.0"
  APILAMA_DEBUG: "false"
  SHELLAMA_URL: "http://shellama-service:5000"
  PYLLM_URL: "http://pyllm-service:5002"
  PYBOX_URL: "http://pybox-service:5003"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: weblama-config
  namespace: pylama
data:
  WEBLAMA_PORT: "3000"
  WEBLAMA_HOST: "0.0.0.0"
  API_URL: "http://apilama-service:5001"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shellama-deployment
  namespace: pylama
  labels:
    app: shellama
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shellama
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: shellama
    spec:
      containers:
      - name: shellama
        image: pylama/shellama:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: shellama-config
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /api/shellama/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/shellama/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: shellama-data
          mountPath: /app/data
        - name: shellama-logs
          mountPath: /app/logs
      volumes:
      - name: shellama-data
        persistentVolumeClaim:
          claimName: shellama-data-pvc
      - name: shellama-logs
        persistentVolumeClaim:
          claimName: shellama-logs-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apilama-deployment
  namespace: pylama
  labels:
    app: apilama
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apilama
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: apilama
    spec:
      containers:
      - name: apilama
        image: pylama/apilama:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        envFrom:
        - configMapRef:
            name: apilama-config
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: apilama-data
          mountPath: /app/data
        - name: apilama-logs
          mountPath: /app/logs
      volumes:
      - name: apilama-data
        persistentVolumeClaim:
          claimName: apilama-data-pvc
      - name: apilama-logs
        persistentVolumeClaim:
          claimName: apilama-logs-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weblama-deployment
  namespace: pylama
  labels:
    app: weblama
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weblama
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: weblama
    spec:
      containers:
      - name: weblama
        image: pylama/weblama:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: weblama-config
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: weblama-public
          mountPath: /app/public
        - name: weblama-markdown
          mountPath: /app/markdown
      volumes:
      - name: weblama-public
        persistentVolumeClaim:
          claimName: weblama-public-pvc
      - name: weblama-markdown
        persistentVolumeClaim:
          claimName: weblama-markdown-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: shellama-service
  namespace: pylama
spec:
  selector:
    app: shellama
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: apilama-service
  namespace: pylama
spec:
  selector:
    app: apilama
  ports:
  - port: 5001
    targetPort: 5001
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: weblama-service
  namespace: pylama
spec:
  selector:
    app: weblama
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pylama-ingress
  namespace: pylama
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
spec:
  tls:
  - hosts:
    - api.pylama.example.com
    - app.pylama.example.com
    secretName: pylama-tls
  rules:
  - host: api.pylama.example.com
    http:
      paths:
      - path: /api/shellama
        pathType: Prefix
        backend:
          service:
            name: shellama-service
            port:
              number: 5000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: apilama-service
            port:
              number: 5001
  - host: app.pylama.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: weblama-service
            port:
              number: 3000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shellama-data-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shellama-logs-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: apilama-data-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: apilama-logs-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: weblama-public-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: weblama-markdown-pvc
  namespace: pylama
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shellama-hpa
  namespace: pylama
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shellama-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: apilama-hpa
  namespace: pylama
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: apilama-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: weblama-hpa
  namespace: pylama
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: weblama-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
